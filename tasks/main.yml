---
# tasks file for ansible-role-update-ubuntu
- name: "Gather facts"
  setup:    # equivalent to "gather_facts: yes"

- name: "Check is_ubuntu facts"
  include_role:
    name: itnok.is_ubuntu

# In a context such a Docker container systemd might not be necessarily part of the game...
- name: "Check whether systemd-run is available"
  stat:
    path: "/usr/bin/systemd-run"
  register: manage_pkg_systemd_run

- name: "Wait for any possibly running unattended upgrade to finish"
  raw: systemd-run --property="After=apt-daily.service apt-daily-upgrade.service" --wait /bin/true
  when: manage_pkg_systemd_run.stat.exists

- name: "Update apt package cache"
  apt:
    cache_valid_time: 1200

- name: "Get list of available updates"
  command: apt list --upgradable
  register: pkglist

- name: "Perform upgrade of all {{ pkglist.stdout_lines|length-1 }} upgradable packages to the latest version"
  apt:
    upgrade: dist
  when:
    - pkglist.rc == 0
    - pkglist.stdout_lines | length >= 1

- name: "Check if reboot is required"
  stat:
    path: /var/run/reboot-required
  register: reboot_required

- name: "Set is_reboot_required fact"
  set_fact:
    is_reboot_required: "{{ True if reboot_required.stat.exists and not is_ubuntu_localhost and not is_ubuntu_inside_container else False }}"

- name: "Reboot of {{ ansible_host }} is needed"
  reboot:
    reboot_timeout: 300
  when: is_reboot_required | bool

- debug:
    msg: "{{ ansible_host }} is now back up and running!"
  when: is_reboot_required | bool
